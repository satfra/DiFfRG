template <typename REG> class etaPhi_kernel
{
public:
  template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8,
            typename T9, typename T10, typename T11, typename T12, typename T13>
  static __forceinline__ __host__ __device__ auto
  kernel(const double q, const double cos1, const double q0, const double k, const T1 p0f, const T2 p, const T3 Nc,
         const T4 Nf, const T5 T, const T6 muq, const T7 etaQ, const T8 etaPhi, const T9 hPhi, const T10 d1V,
         const T11 d2V, const T12 d3V, const T13 rhoPhi)
  {
    // optimization definitions
    const double DiFfRGREPL1 = RB(powr<2>(k), powr<2>(q));
    const double DiFfRGREPL2 = RB(powr<2>(k), -2. * cos1 * p * q + powr<2>(p) + powr<2>(q));
    const double DiFfRGREPL3 = RBdot(powr<2>(k), powr<2>(q));
    const double DiFfRGREPL4 = RF(powr<2>(k), powr<2>(q));
    const double DiFfRGREPL5 = RF(powr<2>(k), 2. * cos1 * p * q + powr<2>(p) + powr<2>(q));
    const double DiFfRGREPL6 = RFdot(powr<2>(k), powr<2>(q));

    // flow
    return -1. *
           real(powr<-2>(p) *
                (2. * (-1. * DiFfRGREPL3 + DiFfRGREPL1 * etaPhi) * rhoPhi * powr<2>(d2V) *
                     powr<-1>(DiFfRGREPL1 + d1V + powr<2>(q) + powr<2>(q0)) *
                     powr<-2>(DiFfRGREPL1 + d1V + 2. * d2V * rhoPhi + powr<2>(q) + powr<2>(q0)) +
                 0.5 * (-1. * DiFfRGREPL3 + DiFfRGREPL1 * etaPhi) *
                     powr<-2>(DiFfRGREPL1 + d1V + powr<2>(q) + powr<2>(q0)) *
                     powr<-2>(DiFfRGREPL1 + d1V + 2. * d2V * rhoPhi + powr<2>(q) + powr<2>(q0)) *
                     (4. * rhoPhi * powr<2>(d2V) * (DiFfRGREPL1 + d1V + 2. * d2V * rhoPhi + powr<2>(q) + powr<2>(q0)) -
                      1. * (d2V + 2. * d3V * rhoPhi) * powr<2>(DiFfRGREPL1 + d1V + powr<2>(q) + powr<2>(q0)) -
                      1. * d2V * (1. + powr<2>(Nf)) *
                          powr<2>(DiFfRGREPL1 + d1V + 2. * d2V * rhoPhi + powr<2>(q) + powr<2>(q0))) +
                 2. * (DiFfRGREPL3 - 1. * DiFfRGREPL1 * etaPhi) * rhoPhi * powr<2>(d2V) *
                     powr<-2>(DiFfRGREPL1 + d1V + 2. * d2V * rhoPhi + powr<2>(q) + powr<2>(q0)) *
                     powr<-1>(DiFfRGREPL2 + d1V - 2. * cos1 * p * q + powr<2>(p) + powr<2>(q) + powr<2>(q0)) +
                 0.5 * (d2V * (-1. * DiFfRGREPL3 + DiFfRGREPL1 * etaPhi) * (1. + powr<2>(Nf)) *
                            powr<-2>(DiFfRGREPL1 + d1V + powr<2>(q) + powr<2>(q0)) +
                        (-1. * DiFfRGREPL3 + DiFfRGREPL1 * etaPhi) * (d2V + 2. * d3V * rhoPhi) *
                            powr<-2>(DiFfRGREPL1 + d1V + 2. * d2V * rhoPhi + powr<2>(q) + powr<2>(q0)) +
                        4. * (DiFfRGREPL3 - 1. * DiFfRGREPL1 * etaPhi) * rhoPhi * powr<2>(d2V) *
                            powr<-2>(DiFfRGREPL1 + d1V + powr<2>(q) + powr<2>(q0)) *
                            powr<-1>(DiFfRGREPL2 + d1V - 2. * cos1 * p * q + 2. * d2V * rhoPhi + powr<2>(p) +
                                     powr<2>(q) + powr<2>(q0))) +
                 4. * (-1. * DiFfRGREPL6 + DiFfRGREPL4 * etaQ) * Nc * (DiFfRGREPL4 + q) * powr<2>(hPhi) * powr<2>(Nf) *
                     (2. * DiFfRGREPL4 * Nf * q + 6.283185307179586 * Nf * q0 * T +
                      complex<double>(0., 2.) * muq * Nf * (q0 + 3.141592653589793 * T) + Nf * powr<2>(DiFfRGREPL4) +
                      rhoPhi * powr<2>(hPhi) - 1. * Nf * powr<2>(muq) + Nf * powr<2>(q) + Nf * powr<2>(q0) +
                      9.869604401089358 * Nf * powr<2>(T)) *
                     powr<-3>(2. * DiFfRGREPL4 * Nf * q + complex<double>(0., 2.) * muq * Nf * q0 +
                              Nf * powr<2>(DiFfRGREPL4) + rhoPhi * powr<2>(hPhi) - 1. * Nf * powr<2>(muq) +
                              Nf * powr<2>(q) + Nf * powr<2>(q0)) +
                 4. * (DiFfRGREPL6 - 1. * DiFfRGREPL4 * etaQ) * Nc * powr<2>(hPhi) * powr<2>(Nf) *
                     powr<-2>(rhoPhi * powr<2>(hPhi) + Nf * powr<2>(DiFfRGREPL4 + q) +
                              Nf * powr<2>(complex<double>(0., 1.) * muq + q0)) *
                     powr<-1>(rhoPhi * powr<2>(hPhi) + Nf * powr<2>(complex<double>(0., 1.) * muq + q0) +
                              Nf * powr<2>(DiFfRGREPL5 + (sqrt(2. * cos1 * p * q + powr<2>(p) + powr<2>(q))))) *
                     powr<-1>(sqrt(2. * cos1 * p * q + powr<2>(p) + powr<2>(q))) *
                     (DiFfRGREPL5 * (cos1 * p + q) *
                          (complex<double>(0., -2.) * muq * Nf * (q0 + 3.141592653589793 * T) -
                           1. * rhoPhi * powr<2>(hPhi) + Nf * powr<2>(muq) +
                           Nf * (powr<2>(q) - 1. * powr<2>(q0 + 3.141592653589793 * T))) +
                      (cos1 * p *
                           (complex<double>(0., -2.) * muq * Nf * (q0 + 3.141592653589793 * T) -
                            1. * rhoPhi * powr<2>(hPhi) + Nf * powr<2>(muq) +
                            Nf * (powr<2>(q) - 1. * powr<2>(q0 + 3.141592653589793 * T))) +
                       q * (complex<double>(0., 2.) * muq * Nf * (q0 + 3.141592653589793 * T) + rhoPhi * powr<2>(hPhi) -
                            1. * Nf * powr<2>(muq) + Nf * (powr<2>(q) + powr<2>(q0 + 3.141592653589793 * T)))) *
                          (sqrt(2. * cos1 * p * q + powr<2>(p) + powr<2>(q))) +
                      Nf * (cos1 * p + q) * powr<2>(DiFfRGREPL4) *
                          (DiFfRGREPL5 + (sqrt(2. * cos1 * p * q + powr<2>(p) + powr<2>(q)))) +
                      2. * DiFfRGREPL4 *
                          (DiFfRGREPL5 * Nf * q * (cos1 * p + q) +
                           (cos1 * Nf * p * q + 6.283185307179586 * Nf * q0 * T +
                            complex<double>(0., 2.) * muq * Nf * (q0 + 3.141592653589793 * T) + rhoPhi * powr<2>(hPhi) -
                            1. * Nf * powr<2>(muq) + Nf * powr<2>(q) + Nf * powr<2>(q0) +
                            9.869604401089358 * Nf * powr<2>(T)) *
                               (sqrt(2. * cos1 * p * q + powr<2>(p) + powr<2>(q)))))));
  }

  template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8,
            typename T9, typename T10, typename T11, typename T12, typename T13>
  static __forceinline__ __host__ __device__ auto
  constant(const double k, const T1 p0f, const T2 p, const T3 Nc, const T4 Nf, const T5 T, const T6 muq, const T7 etaQ,
           const T8 etaPhi, const T9 hPhi, const T10 d1V, const T11 d2V, const T12 d3V, const T13 rhoPhi)
  {
    // flow
    return 0.;
  }

private:
  static __forceinline__ __device__ __host__ auto RB(const auto k2, const auto p2) { return REG::RB(k2, p2); }
  static __forceinline__ __device__ __host__ auto RF(const auto k2, const auto p2) { return REG::RF(k2, p2); }

  static __forceinline__ __device__ __host__ auto RBdot(const auto k2, const auto p2) { return REG::RBdot(k2, p2); }
  static __forceinline__ __device__ __host__ auto RFdot(const auto k2, const auto p2) { return REG::RFdot(k2, p2); }

  static __forceinline__ __device__ __host__ auto dq2RB(const auto k2, const auto p2) { return REG::dq2RB(k2, p2); }
  static __forceinline__ __device__ __host__ auto dq2RF(const auto k2, const auto p2) { return REG::dq2RF(k2, p2); }
};